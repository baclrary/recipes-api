# Generated by Django 3.2.4 on 2024-01-25 14:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=500)),
                ('description', models.CharField(blank=True, max_length=3000, null=True)),
                ('weight', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('price', models.PositiveIntegerField()),
                ('link', models.CharField(blank=True, max_length=2000, null=True)),
                ('craftable', models.BooleanField(blank=True, default=False)),
                ('dismantlable', models.BooleanField(blank=True, default=False)),
                ('usable', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Bomb',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='items.baseitem')),
                ('charges', models.PositiveSmallIntegerField(default=1)),
                ('img', models.ImageField(default='assets/alchemy/default_bomb.png', null=True, upload_to='alchemy/bombs/')),
                ('duration_sec', models.PositiveIntegerField(default=5)),
            ],
            options={
                'abstract': False,
            },
            bases=('items.baseitem',),
        ),
        migrations.CreateModel(
            name='CraftingComponent',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='items.baseitem')),
                ('img', models.ImageField(default='assets/items/default_craft_component.png', null=True, upload_to='items/craft_components/')),
                ('craft_type', models.CharField(choices=[('alchemy', 'Alchemy'), ('crafting', 'Crafting'), ('both', 'Both')], max_length=50)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('items.baseitem',),
        ),
        migrations.CreateModel(
            name='Decotion',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='items.baseitem')),
                ('img', models.ImageField(default='assets/alchemy/default_decotion.png', null=True, upload_to='alchemy/decotions/')),
                ('charges', models.PositiveSmallIntegerField(default=1)),
                ('duration_sec', models.PositiveIntegerField(default=1800)),
                ('tox_points', models.PositiveSmallIntegerField(default=70)),
            ],
            options={
                'abstract': False,
            },
            bases=('items.baseitem',),
        ),
        migrations.CreateModel(
            name='Oil',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='items.baseitem')),
                ('img', models.ImageField(default='assets/alchemy/default_oil.png', null=True, upload_to='alchemy/oils/')),
                ('charges', models.PositiveSmallIntegerField(default=30)),
                ('attack_bonus_perc', models.PositiveSmallIntegerField(default=15)),
            ],
            options={
                'abstract': False,
            },
            bases=('items.baseitem',),
        ),
        migrations.CreateModel(
            name='Potion',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='items.baseitem')),
                ('img', models.ImageField(default='assets/alchemy/default_potion.png', null=True, upload_to='alchemy/potions/')),
                ('charges', models.PositiveSmallIntegerField(default=3)),
                ('duration_sec', models.PositiveIntegerField(default=30)),
                ('tox_points', models.PositiveSmallIntegerField(default=20)),
            ],
            options={
                'abstract': False,
            },
            bases=('items.baseitem',),
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=400, unique=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='items.baseitem')),
            ],
        ),
    ]
